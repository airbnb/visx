_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[75],{"12iu":function(e,t,n){"use strict";n.r(t);var r=n("jg1C"),i=(n("ERkP"),n("zjfJ")),o=n("HbGN"),a=n("JmwF"),u=n("lxyu");function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e){var t=e.graticule,n=e.lines,i=e.outline,c=e.extent,s=e.extentMajor,d=e.extentMinor,p=e.step,f=e.stepMajor,m=e.stepMinor,h=e.precision,b=e.children,g=Object(o.a)(e,["graticule","lines","outline","extent","extentMajor","extentMinor","step","stepMajor","stepMinor","precision","children"]),y=Object(u.a)();return c&&y.extent(c),s&&y.extentMajor(s),d&&y.extentMinor(d),p&&y.step(p),f&&y.stepMajor(f),m&&y.stepMinor(m),h&&y.precision(h),b?Object(r.jsx)(r.Fragment,{children:b({graticule:y})}):Object(r.jsxs)(a.a,{className:"visx-geo-graticule",children:[t&&Object(r.jsx)("path",l({d:t(y()),fill:"none",stroke:"black"},g)),n&&y.lines().map((function(e,t){return Object(r.jsx)("g",{children:Object(r.jsx)("path",l({d:n(e),fill:"none",stroke:"black"},g))},t)})),i&&Object(r.jsx)("path",l({d:i(y.outline()),fill:"none",stroke:"black"},g))]})}try{s.displayName="Graticule",s.__docgenInfo={description:"",displayName:"Graticule",props:{graticule:{defaultValue:null,description:"Render function for graticules which is passed a GeoJSON MultiLineString geometry object\nrepresenting all meridians and parallels for the graticule.",name:"graticule",required:!1,type:{name:"((multiLineString: MultiLineString) => string) | undefined"}},lines:{defaultValue:null,description:"Render function for graticule lines, which is invoked once for each meridian or parallel for the graticule,\nand is passed the GeoJSON LineString object representing said meridian or parallel.",name:"lines",required:!1,type:{name:"((lineString: LineString) => string) | undefined"}},outline:{defaultValue:null,description:"Render function for the outline of the graticule (i.e. along the meridians and parallels defining its extent).\nIt is passed a GeoJSON Polygon geometry object representing the outline.",name:"outline",required:!1,type:{name:"((polygon: Polygon) => string) | undefined"}},children:{defaultValue:null,description:"Override render function, which is passed the configured graticule generator.",name:"children",required:!1,type:{name:"(({ graticule }: { graticule: GeoGraticuleGenerator; }) => ReactNode) | undefined"}},extent:{defaultValue:null,description:"Sets the major and minor extents of the graticule generator, which defaults to \u27e8\u27e8-180\xb0, -80\xb0 - \u03b5\u27e9, \u27e8180\xb0, 80\xb0 + \u03b5\u27e9\u27e9.",name:"extent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},extentMajor:{defaultValue:null,description:"Sets the major extent of the graticule generator, which defaults to \u27e8\u27e8-180\xb0, -90\xb0 + \u03b5\u27e9, \u27e8180\xb0, 90\xb0 - \u03b5\u27e9\u27e9.",name:"extentMajor",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},extentMinor:{defaultValue:null,description:"Sets the major extent of the graticule generator, which defaults to \u27e8\u27e8-180\xb0, -80\xb0 - \u03b5\u27e9, \u27e8180\xb0, 80\xb0 + \u03b5\u27e9\u27e9.",name:"extentMinor",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},step:{defaultValue:null,description:"Sets both the major and minor step of the graticule generator.",name:"step",required:!1,type:{name:"[number, number] | undefined"}},stepMajor:{defaultValue:null,description:"Sets the major step of the graticule generator, which defaults to \u27e890\xb0, 360\xb0\u27e9.",name:"stepMajor",required:!1,type:{name:"[number, number] | undefined"}},stepMinor:{defaultValue:null,description:"Sets the major step of the graticule generator, which defaults to \u27e810\xb0, 10\xb0\u27e9.",name:"stepMinor",required:!1,type:{name:"[number, number] | undefined"}},precision:{defaultValue:null,description:"Sets the precision of the graticule generator, which defaults to 2.5\xb0.",name:"precision",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/graticule/Graticule.tsx#Graticule"]={docgenInfo:s.__docgenInfo,name:"Graticule",path:"../visx-geo/src/graticule/Graticule.tsx#Graticule"})}catch(H){}var d=n("fGyu"),p=n("O94r"),f=n.n(p),m=n("jQ+C"),h=n("Uyw0"),b=n("29fh"),g=n("6pkO"),y=n("rvbe"),j=n("S5jI"),x=n("06HE");function O(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function P(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?O(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):O(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var S={orthographic:function(){return Object(m.a)()},albers:function(){return Object(h.a)()},albersUsa:function(){return Object(b.a)()},mercator:function(){return Object(g.a)()},naturalEarth:function(){return Object(y.a)()},equalEarth:function(){return Object(j.a)()}};function v(e){var t=e.data,n=e.projection,i=void 0===n?"mercator":n,u=e.projectionFunc,c=e.clipAngle,l=e.clipExtent,p=e.scale,m=e.translate,h=e.center,b=e.rotate,g=e.precision,y=e.fitExtent,j=e.fitSize,O=e.centroid,v=e.graticule,w=e.graticuleLines,M=e.graticuleOutline,E=e.className,q=e.innerRef,V=e.pointRadius,G=e.children,R=Object(o.a)(e,["data","projection","projectionFunc","clipAngle","clipExtent","scale","translate","center","rotate","precision","fitExtent","fitSize","centroid","graticule","graticuleLines","graticuleOutline","className","innerRef","pointRadius","children"]),k=("string"===typeof i?S[i]:i)();c&&k.clipAngle&&k.clipAngle(c),l&&k.clipExtent&&k.clipExtent(l),p&&k.scale&&k.scale(p),m&&k.translate&&k.translate(m),h&&k.center&&k.center(h),b&&k.rotate&&k.rotate(b),g&&k.precision&&k.precision(g),y&&k.fitExtent&&k.fitExtent.apply(k,Object(d.a)(y)),j&&k.fitSize&&k.fitSize.apply(k,Object(d.a)(j));var N=Object(x.a)().projection(k);V&&N.pointRadius(V);var A=t.map((function(e,t){return{feature:e,type:i,projection:k,index:t,centroid:N.centroid(e),path:N(e)}}));return G?Object(r.jsx)(r.Fragment,{children:G({path:N,features:A,projection:k})}):Object(r.jsxs)(a.a,{className:"visx-geo",children:[v&&!v.foreground&&Object(r.jsx)(s,P({graticule:function(e){return N(e)||""}},v)),w&&!w.foreground&&Object(r.jsx)(s,P({lines:function(e){return N(e)||""}},w)),M&&!M.foreground&&Object(r.jsx)(s,P({outline:function(e){return N(e)||""}},M)),A.map((function(e,t){return Object(r.jsxs)("g",{children:[Object(r.jsx)("path",P({className:f()("visx-geo-".concat(i),E),d:e.path||"",ref:null===q||void 0===q?void 0:q(e,t)},R)),null===O||void 0===O?void 0:O(e.centroid,e)]},"".concat(i,"-").concat(t))})),null===u||void 0===u?void 0:u(k),(null===v||void 0===v?void 0:v.foreground)&&Object(r.jsx)(s,P({graticule:function(e){return N(e)||""}},v)),(null===w||void 0===w?void 0:w.foreground)&&Object(r.jsx)(s,P({lines:function(e){return N(e)||""}},w)),(null===M||void 0===M?void 0:M.foreground)&&Object(r.jsx)(s,P({outline:function(e){return N(e)||""}},M))]})}try{v.displayName="Projection",v.__docgenInfo={description:"Component for all projections.",displayName:"Projection",props:{data:{defaultValue:null,description:"Array of features to project.",name:"data",required:!0,type:{name:"Datum[]"}},projection:{defaultValue:{value:"mercator"},description:"Preset projection name, or custom projection function which returns a GeoProjection.",name:"projection",required:!1,type:{name:'"mercator" | "orthographic" | "albers" | "albersUsa" | "naturalEarth" | "equalEarth" | (() => GeoProjection) | undefined'}},projectionFunc:{defaultValue:null,description:"Hook to render above features, passed the configured projectionFunc.",name:"projectionFunc",required:!1,type:{name:"((projection: GeoProjection) => ReactNode) | undefined"}},clipAngle:{defaultValue:null,description:"Sets the projection\u2019s clipping circle radius to the specified angle in degree.",name:"clipAngle",required:!1,type:{name:"number | undefined"}},clipExtent:{defaultValue:null,description:"Sets the projection\u2019s viewport clip extent to the specified bounds in pixels. extent bounds\nare specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left-side of the viewport,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"clipExtent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},scale:{defaultValue:null,description:"Sets the projection\u2019s scale factor to the specified value. The scale factor corresponds linearly\nto the distance between projected points; however, absolute scale factors are not equivalent\nacross projections.",name:"scale",required:!1,type:{name:"number | undefined"}},translate:{defaultValue:null,description:"Sets the projection\u2019s translation offset, which determines the pixel coordinates of the\nprojection\u2019s center, to the specified two-element array [tx, ty].",name:"translate",required:!1,type:{name:"[number, number] | undefined"}},center:{defaultValue:null,description:"Sets the projection\u2019s center to the specified two-element array of longitude and latitude in degrees.",name:"center",required:!1,type:{name:"[number, number] | undefined"}},rotate:{defaultValue:null,description:"Sets the projection\u2019s three-axis spherical rotation to the specified angles [lambda, phi [, gamma]], corresponding to yaw, pitch, and roll.",name:"rotate",required:!1,type:{name:"[number, number] | [number, number, number] | undefined"}},precision:{defaultValue:null,description:"Sets the threshold for the projection\u2019s adaptive resampling to the specified value in pixels.",name:"precision",required:!1,type:{name:"number | undefined"}},fitExtent:{defaultValue:null,description:"Sets the projection\u2019s scale and translate to fit the specified GeoJSON object in the center of the given extent.\nThe extent is specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left side of the bounding box,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"fitExtent",required:!1,type:{name:"[[[number, number], [number, number]], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},fitSize:{defaultValue:null,description:"Convenience prop for props.fitExtent where the top-left corner of the extent is [0, 0].",name:"fitSize",required:!1,type:{name:"[[number, number], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},centroid:{defaultValue:null,description:"Hook to render anything at the centroid of a feature.",name:"centroid",required:!1,type:{name:"((centroid: [number, number], feature: ParsedFeature<Datum>) => ReactNode) | undefined"}},className:{defaultValue:null,description:"className to apply to feature path elements.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Override render function which is passed path data and a copy of the constructed projection.",name:"children",required:!1,type:{name:"((args: { path: GeoPath<unknown, GeoPermissibleObjects>; features: ParsedFeature<Datum>[]; projection: GeoProjection; }) => ReactNode) | undefined"}},innerRef:{defaultValue:null,description:"Function invoked for each feature which returns a React.Ref to the projection path element for that feature.",name:"innerRef",required:!1,type:{name:"((feature: ParsedFeature<Datum>, index: number) => Ref<SVGPathElement>) | undefined"}},graticule:{defaultValue:null,description:"If specified, renders a Graticule with the specified props. Specify `graticule.foreground = true` to be rendered on top of features.",name:"graticule",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleLines:{defaultValue:null,description:"If specified, renders a Graticule lines with the specified props. Specify `graticuleLines.foreground = true` to be rendered on top of features.",name:"graticuleLines",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleOutline:{defaultValue:null,description:"If specified, renders a Graticule outline with the specified props. Specify `graticuleOutline.foreground = true` to be rendered on top of features.",name:"graticuleOutline",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "lines" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},pointRadius:{defaultValue:null,description:"Sets the radius used to display Point and MultiPoint geometries to the specified number.",name:"pointRadius",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/projections/Projection.tsx#Projection"]={docgenInfo:v.__docgenInfo,name:"Projection",path:"../visx-geo/src/projections/Projection.tsx#Projection"})}catch(H){}function w(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function M(e){return Object(r.jsx)(v,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?w(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):w(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({projection:"albers"},e))}try{M.displayName="Albers",M.__docgenInfo={description:'All props pass through to `<Projection projection="albers" {...props} />`',displayName:"Albers",props:{children:{defaultValue:null,description:"Override render function which is passed path data and a copy of the constructed projection.",name:"children",required:!1,type:{name:"((args: { path: GeoPath<unknown, GeoPermissibleObjects>; features: ParsedFeature<Datum>[]; projection: GeoProjection; }) => ReactNode) | undefined"}},className:{defaultValue:null,description:"className to apply to feature path elements.",name:"className",required:!1,type:{name:"string | undefined"}},scale:{defaultValue:null,description:"Sets the projection\u2019s scale factor to the specified value. The scale factor corresponds linearly\nto the distance between projected points; however, absolute scale factors are not equivalent\nacross projections.",name:"scale",required:!1,type:{name:"number | undefined"}},rotate:{defaultValue:null,description:"Sets the projection\u2019s three-axis spherical rotation to the specified angles [lambda, phi [, gamma]], corresponding to yaw, pitch, and roll.",name:"rotate",required:!1,type:{name:"[number, number] | [number, number, number] | undefined"}},data:{defaultValue:null,description:"Array of features to project.",name:"data",required:!0,type:{name:"Datum[]"}},translate:{defaultValue:null,description:"Sets the projection\u2019s translation offset, which determines the pixel coordinates of the\nprojection\u2019s center, to the specified two-element array [tx, ty].",name:"translate",required:!1,type:{name:"[number, number] | undefined"}},center:{defaultValue:null,description:"Sets the projection\u2019s center to the specified two-element array of longitude and latitude in degrees.",name:"center",required:!1,type:{name:"[number, number] | undefined"}},innerRef:{defaultValue:null,description:"Function invoked for each feature which returns a React.Ref to the projection path element for that feature.",name:"innerRef",required:!1,type:{name:"((feature: ParsedFeature<Datum>, index: number) => Ref<SVGPathElement>) | undefined"}},centroid:{defaultValue:null,description:"Hook to render anything at the centroid of a feature.",name:"centroid",required:!1,type:{name:"((centroid: [number, number], feature: ParsedFeature<Datum>) => ReactNode) | undefined"}},projectionFunc:{defaultValue:null,description:"Hook to render above features, passed the configured projectionFunc.",name:"projectionFunc",required:!1,type:{name:"((projection: GeoProjection) => ReactNode) | undefined"}},clipAngle:{defaultValue:null,description:"Sets the projection\u2019s clipping circle radius to the specified angle in degree.",name:"clipAngle",required:!1,type:{name:"number | undefined"}},clipExtent:{defaultValue:null,description:"Sets the projection\u2019s viewport clip extent to the specified bounds in pixels. extent bounds\nare specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left-side of the viewport,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"clipExtent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},precision:{defaultValue:null,description:"Sets the threshold for the projection\u2019s adaptive resampling to the specified value in pixels.",name:"precision",required:!1,type:{name:"number | undefined"}},fitExtent:{defaultValue:null,description:"Sets the projection\u2019s scale and translate to fit the specified GeoJSON object in the center of the given extent.\nThe extent is specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left side of the bounding box,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"fitExtent",required:!1,type:{name:"[[[number, number], [number, number]], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},fitSize:{defaultValue:null,description:"Convenience prop for props.fitExtent where the top-left corner of the extent is [0, 0].",name:"fitSize",required:!1,type:{name:"[[number, number], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},graticule:{defaultValue:null,description:"If specified, renders a Graticule with the specified props. Specify `graticule.foreground = true` to be rendered on top of features.",name:"graticule",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleLines:{defaultValue:null,description:"If specified, renders a Graticule lines with the specified props. Specify `graticuleLines.foreground = true` to be rendered on top of features.",name:"graticuleLines",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleOutline:{defaultValue:null,description:"If specified, renders a Graticule outline with the specified props. Specify `graticuleOutline.foreground = true` to be rendered on top of features.",name:"graticuleOutline",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "lines" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},pointRadius:{defaultValue:null,description:"Sets the radius used to display Point and MultiPoint geometries to the specified number.",name:"pointRadius",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/projections/Albers.tsx#Albers"]={docgenInfo:M.__docgenInfo,name:"Albers",path:"../visx-geo/src/projections/Albers.tsx#Albers"})}catch(H){}function E(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function q(e){return Object(r.jsx)(v,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?E(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):E(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({projection:"albersUsa"},e))}try{q.displayName="AlbersUsa",q.__docgenInfo={description:'All props pass through to `<Projection projection="albersUsa" {...props} />`',displayName:"AlbersUsa",props:{children:{defaultValue:null,description:"Override render function which is passed path data and a copy of the constructed projection.",name:"children",required:!1,type:{name:"((args: { path: GeoPath<unknown, GeoPermissibleObjects>; features: ParsedFeature<Datum>[]; projection: GeoProjection; }) => ReactNode) | undefined"}},className:{defaultValue:null,description:"className to apply to feature path elements.",name:"className",required:!1,type:{name:"string | undefined"}},scale:{defaultValue:null,description:"Sets the projection\u2019s scale factor to the specified value. The scale factor corresponds linearly\nto the distance between projected points; however, absolute scale factors are not equivalent\nacross projections.",name:"scale",required:!1,type:{name:"number | undefined"}},rotate:{defaultValue:null,description:"Sets the projection\u2019s three-axis spherical rotation to the specified angles [lambda, phi [, gamma]], corresponding to yaw, pitch, and roll.",name:"rotate",required:!1,type:{name:"[number, number] | [number, number, number] | undefined"}},data:{defaultValue:null,description:"Array of features to project.",name:"data",required:!0,type:{name:"Datum[]"}},translate:{defaultValue:null,description:"Sets the projection\u2019s translation offset, which determines the pixel coordinates of the\nprojection\u2019s center, to the specified two-element array [tx, ty].",name:"translate",required:!1,type:{name:"[number, number] | undefined"}},center:{defaultValue:null,description:"Sets the projection\u2019s center to the specified two-element array of longitude and latitude in degrees.",name:"center",required:!1,type:{name:"[number, number] | undefined"}},innerRef:{defaultValue:null,description:"Function invoked for each feature which returns a React.Ref to the projection path element for that feature.",name:"innerRef",required:!1,type:{name:"((feature: ParsedFeature<Datum>, index: number) => Ref<SVGPathElement>) | undefined"}},centroid:{defaultValue:null,description:"Hook to render anything at the centroid of a feature.",name:"centroid",required:!1,type:{name:"((centroid: [number, number], feature: ParsedFeature<Datum>) => ReactNode) | undefined"}},projectionFunc:{defaultValue:null,description:"Hook to render above features, passed the configured projectionFunc.",name:"projectionFunc",required:!1,type:{name:"((projection: GeoProjection) => ReactNode) | undefined"}},clipAngle:{defaultValue:null,description:"Sets the projection\u2019s clipping circle radius to the specified angle in degree.",name:"clipAngle",required:!1,type:{name:"number | undefined"}},clipExtent:{defaultValue:null,description:"Sets the projection\u2019s viewport clip extent to the specified bounds in pixels. extent bounds\nare specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left-side of the viewport,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"clipExtent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},precision:{defaultValue:null,description:"Sets the threshold for the projection\u2019s adaptive resampling to the specified value in pixels.",name:"precision",required:!1,type:{name:"number | undefined"}},fitExtent:{defaultValue:null,description:"Sets the projection\u2019s scale and translate to fit the specified GeoJSON object in the center of the given extent.\nThe extent is specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left side of the bounding box,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"fitExtent",required:!1,type:{name:"[[[number, number], [number, number]], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},fitSize:{defaultValue:null,description:"Convenience prop for props.fitExtent where the top-left corner of the extent is [0, 0].",name:"fitSize",required:!1,type:{name:"[[number, number], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},graticule:{defaultValue:null,description:"If specified, renders a Graticule with the specified props. Specify `graticule.foreground = true` to be rendered on top of features.",name:"graticule",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleLines:{defaultValue:null,description:"If specified, renders a Graticule lines with the specified props. Specify `graticuleLines.foreground = true` to be rendered on top of features.",name:"graticuleLines",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleOutline:{defaultValue:null,description:"If specified, renders a Graticule outline with the specified props. Specify `graticuleOutline.foreground = true` to be rendered on top of features.",name:"graticuleOutline",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "lines" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},pointRadius:{defaultValue:null,description:"Sets the radius used to display Point and MultiPoint geometries to the specified number.",name:"pointRadius",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/projections/AlbersUsa.tsx#AlbersUsa"]={docgenInfo:q.__docgenInfo,name:"AlbersUsa",path:"../visx-geo/src/projections/AlbersUsa.tsx#AlbersUsa"})}catch(H){}function V(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function G(e){return Object(r.jsx)(v,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?V(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):V(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e))}try{G.displayName="CustomProjection",G.__docgenInfo={description:"All props pass through to `<Projection projection={customProjection} {...props} />`",displayName:"CustomProjection",props:{data:{defaultValue:null,description:"Array of features to project.",name:"data",required:!0,type:{name:"Datum[]"}},projection:{defaultValue:null,description:"Preset projection name, or custom projection function which returns a GeoProjection.",name:"projection",required:!1,type:{name:'"mercator" | "orthographic" | "albers" | "albersUsa" | "naturalEarth" | "equalEarth" | (() => GeoProjection) | undefined'}},projectionFunc:{defaultValue:null,description:"Hook to render above features, passed the configured projectionFunc.",name:"projectionFunc",required:!1,type:{name:"((projection: GeoProjection) => ReactNode) | undefined"}},clipAngle:{defaultValue:null,description:"Sets the projection\u2019s clipping circle radius to the specified angle in degree.",name:"clipAngle",required:!1,type:{name:"number | undefined"}},clipExtent:{defaultValue:null,description:"Sets the projection\u2019s viewport clip extent to the specified bounds in pixels. extent bounds\nare specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left-side of the viewport,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"clipExtent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},scale:{defaultValue:null,description:"Sets the projection\u2019s scale factor to the specified value. The scale factor corresponds linearly\nto the distance between projected points; however, absolute scale factors are not equivalent\nacross projections.",name:"scale",required:!1,type:{name:"number | undefined"}},translate:{defaultValue:null,description:"Sets the projection\u2019s translation offset, which determines the pixel coordinates of the\nprojection\u2019s center, to the specified two-element array [tx, ty].",name:"translate",required:!1,type:{name:"[number, number] | undefined"}},center:{defaultValue:null,description:"Sets the projection\u2019s center to the specified two-element array of longitude and latitude in degrees.",name:"center",required:!1,type:{name:"[number, number] | undefined"}},rotate:{defaultValue:null,description:"Sets the projection\u2019s three-axis spherical rotation to the specified angles [lambda, phi [, gamma]], corresponding to yaw, pitch, and roll.",name:"rotate",required:!1,type:{name:"[number, number] | [number, number, number] | undefined"}},precision:{defaultValue:null,description:"Sets the threshold for the projection\u2019s adaptive resampling to the specified value in pixels.",name:"precision",required:!1,type:{name:"number | undefined"}},fitExtent:{defaultValue:null,description:"Sets the projection\u2019s scale and translate to fit the specified GeoJSON object in the center of the given extent.\nThe extent is specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left side of the bounding box,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"fitExtent",required:!1,type:{name:"[[[number, number], [number, number]], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},fitSize:{defaultValue:null,description:"Convenience prop for props.fitExtent where the top-left corner of the extent is [0, 0].",name:"fitSize",required:!1,type:{name:"[[number, number], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},centroid:{defaultValue:null,description:"Hook to render anything at the centroid of a feature.",name:"centroid",required:!1,type:{name:"((centroid: [number, number], feature: ParsedFeature<Datum>) => ReactNode) | undefined"}},className:{defaultValue:null,description:"className to apply to feature path elements.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Override render function which is passed path data and a copy of the constructed projection.",name:"children",required:!1,type:{name:"((args: { path: GeoPath<unknown, GeoPermissibleObjects>; features: ParsedFeature<Datum>[]; projection: GeoProjection; }) => ReactNode) | undefined"}},innerRef:{defaultValue:null,description:"Function invoked for each feature which returns a React.Ref to the projection path element for that feature.",name:"innerRef",required:!1,type:{name:"((feature: ParsedFeature<Datum>, index: number) => Ref<SVGPathElement>) | undefined"}},graticule:{defaultValue:null,description:"If specified, renders a Graticule with the specified props. Specify `graticule.foreground = true` to be rendered on top of features.",name:"graticule",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleLines:{defaultValue:null,description:"If specified, renders a Graticule lines with the specified props. Specify `graticuleLines.foreground = true` to be rendered on top of features.",name:"graticuleLines",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleOutline:{defaultValue:null,description:"If specified, renders a Graticule outline with the specified props. Specify `graticuleOutline.foreground = true` to be rendered on top of features.",name:"graticuleOutline",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "lines" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},pointRadius:{defaultValue:null,description:"Sets the radius used to display Point and MultiPoint geometries to the specified number.",name:"pointRadius",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/projections/CustomProjection.tsx#CustomProjection"]={docgenInfo:G.__docgenInfo,name:"CustomProjection",path:"../visx-geo/src/projections/CustomProjection.tsx#CustomProjection"})}catch(H){}function R(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function k(e){return Object(r.jsx)(v,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?R(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):R(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({projection:"equalEarth"},e))}try{k.displayName="EqualEarth",k.__docgenInfo={description:'All props pass through to `<Projection projection="equalEarth" {...props} />`',displayName:"EqualEarth",props:{children:{defaultValue:null,description:"Override render function which is passed path data and a copy of the constructed projection.",name:"children",required:!1,type:{name:"((args: { path: GeoPath<unknown, GeoPermissibleObjects>; features: ParsedFeature<Datum>[]; projection: GeoProjection; }) => ReactNode) | undefined"}},className:{defaultValue:null,description:"className to apply to feature path elements.",name:"className",required:!1,type:{name:"string | undefined"}},scale:{defaultValue:null,description:"Sets the projection\u2019s scale factor to the specified value. The scale factor corresponds linearly\nto the distance between projected points; however, absolute scale factors are not equivalent\nacross projections.",name:"scale",required:!1,type:{name:"number | undefined"}},rotate:{defaultValue:null,description:"Sets the projection\u2019s three-axis spherical rotation to the specified angles [lambda, phi [, gamma]], corresponding to yaw, pitch, and roll.",name:"rotate",required:!1,type:{name:"[number, number] | [number, number, number] | undefined"}},data:{defaultValue:null,description:"Array of features to project.",name:"data",required:!0,type:{name:"Datum[]"}},translate:{defaultValue:null,description:"Sets the projection\u2019s translation offset, which determines the pixel coordinates of the\nprojection\u2019s center, to the specified two-element array [tx, ty].",name:"translate",required:!1,type:{name:"[number, number] | undefined"}},center:{defaultValue:null,description:"Sets the projection\u2019s center to the specified two-element array of longitude and latitude in degrees.",name:"center",required:!1,type:{name:"[number, number] | undefined"}},innerRef:{defaultValue:null,description:"Function invoked for each feature which returns a React.Ref to the projection path element for that feature.",name:"innerRef",required:!1,type:{name:"((feature: ParsedFeature<Datum>, index: number) => Ref<SVGPathElement>) | undefined"}},centroid:{defaultValue:null,description:"Hook to render anything at the centroid of a feature.",name:"centroid",required:!1,type:{name:"((centroid: [number, number], feature: ParsedFeature<Datum>) => ReactNode) | undefined"}},projectionFunc:{defaultValue:null,description:"Hook to render above features, passed the configured projectionFunc.",name:"projectionFunc",required:!1,type:{name:"((projection: GeoProjection) => ReactNode) | undefined"}},clipAngle:{defaultValue:null,description:"Sets the projection\u2019s clipping circle radius to the specified angle in degree.",name:"clipAngle",required:!1,type:{name:"number | undefined"}},clipExtent:{defaultValue:null,description:"Sets the projection\u2019s viewport clip extent to the specified bounds in pixels. extent bounds\nare specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left-side of the viewport,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"clipExtent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},precision:{defaultValue:null,description:"Sets the threshold for the projection\u2019s adaptive resampling to the specified value in pixels.",name:"precision",required:!1,type:{name:"number | undefined"}},fitExtent:{defaultValue:null,description:"Sets the projection\u2019s scale and translate to fit the specified GeoJSON object in the center of the given extent.\nThe extent is specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left side of the bounding box,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"fitExtent",required:!1,type:{name:"[[[number, number], [number, number]], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},fitSize:{defaultValue:null,description:"Convenience prop for props.fitExtent where the top-left corner of the extent is [0, 0].",name:"fitSize",required:!1,type:{name:"[[number, number], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},graticule:{defaultValue:null,description:"If specified, renders a Graticule with the specified props. Specify `graticule.foreground = true` to be rendered on top of features.",name:"graticule",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleLines:{defaultValue:null,description:"If specified, renders a Graticule lines with the specified props. Specify `graticuleLines.foreground = true` to be rendered on top of features.",name:"graticuleLines",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleOutline:{defaultValue:null,description:"If specified, renders a Graticule outline with the specified props. Specify `graticuleOutline.foreground = true` to be rendered on top of features.",name:"graticuleOutline",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "lines" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},pointRadius:{defaultValue:null,description:"Sets the radius used to display Point and MultiPoint geometries to the specified number.",name:"pointRadius",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/projections/EqualEarth.tsx#EqualEarth"]={docgenInfo:k.__docgenInfo,name:"EqualEarth",path:"../visx-geo/src/projections/EqualEarth.tsx#EqualEarth"})}catch(H){}function N(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function A(e){return Object(r.jsx)(v,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?N(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):N(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({projection:"mercator"},e))}try{A.displayName="Mercator",A.__docgenInfo={description:'All props pass through to `<Projection projection="mercator" {...props} />`',displayName:"Mercator",props:{children:{defaultValue:null,description:"Override render function which is passed path data and a copy of the constructed projection.",name:"children",required:!1,type:{name:"((args: { path: GeoPath<unknown, GeoPermissibleObjects>; features: ParsedFeature<Datum>[]; projection: GeoProjection; }) => ReactNode) | undefined"}},className:{defaultValue:null,description:"className to apply to feature path elements.",name:"className",required:!1,type:{name:"string | undefined"}},scale:{defaultValue:null,description:"Sets the projection\u2019s scale factor to the specified value. The scale factor corresponds linearly\nto the distance between projected points; however, absolute scale factors are not equivalent\nacross projections.",name:"scale",required:!1,type:{name:"number | undefined"}},rotate:{defaultValue:null,description:"Sets the projection\u2019s three-axis spherical rotation to the specified angles [lambda, phi [, gamma]], corresponding to yaw, pitch, and roll.",name:"rotate",required:!1,type:{name:"[number, number] | [number, number, number] | undefined"}},data:{defaultValue:null,description:"Array of features to project.",name:"data",required:!0,type:{name:"Datum[]"}},translate:{defaultValue:null,description:"Sets the projection\u2019s translation offset, which determines the pixel coordinates of the\nprojection\u2019s center, to the specified two-element array [tx, ty].",name:"translate",required:!1,type:{name:"[number, number] | undefined"}},center:{defaultValue:null,description:"Sets the projection\u2019s center to the specified two-element array of longitude and latitude in degrees.",name:"center",required:!1,type:{name:"[number, number] | undefined"}},innerRef:{defaultValue:null,description:"Function invoked for each feature which returns a React.Ref to the projection path element for that feature.",name:"innerRef",required:!1,type:{name:"((feature: ParsedFeature<Datum>, index: number) => Ref<SVGPathElement>) | undefined"}},centroid:{defaultValue:null,description:"Hook to render anything at the centroid of a feature.",name:"centroid",required:!1,type:{name:"((centroid: [number, number], feature: ParsedFeature<Datum>) => ReactNode) | undefined"}},projectionFunc:{defaultValue:null,description:"Hook to render above features, passed the configured projectionFunc.",name:"projectionFunc",required:!1,type:{name:"((projection: GeoProjection) => ReactNode) | undefined"}},clipAngle:{defaultValue:null,description:"Sets the projection\u2019s clipping circle radius to the specified angle in degree.",name:"clipAngle",required:!1,type:{name:"number | undefined"}},clipExtent:{defaultValue:null,description:"Sets the projection\u2019s viewport clip extent to the specified bounds in pixels. extent bounds\nare specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left-side of the viewport,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"clipExtent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},precision:{defaultValue:null,description:"Sets the threshold for the projection\u2019s adaptive resampling to the specified value in pixels.",name:"precision",required:!1,type:{name:"number | undefined"}},fitExtent:{defaultValue:null,description:"Sets the projection\u2019s scale and translate to fit the specified GeoJSON object in the center of the given extent.\nThe extent is specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left side of the bounding box,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"fitExtent",required:!1,type:{name:"[[[number, number], [number, number]], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},fitSize:{defaultValue:null,description:"Convenience prop for props.fitExtent where the top-left corner of the extent is [0, 0].",name:"fitSize",required:!1,type:{name:"[[number, number], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},graticule:{defaultValue:null,description:"If specified, renders a Graticule with the specified props. Specify `graticule.foreground = true` to be rendered on top of features.",name:"graticule",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleLines:{defaultValue:null,description:"If specified, renders a Graticule lines with the specified props. Specify `graticuleLines.foreground = true` to be rendered on top of features.",name:"graticuleLines",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleOutline:{defaultValue:null,description:"If specified, renders a Graticule outline with the specified props. Specify `graticuleOutline.foreground = true` to be rendered on top of features.",name:"graticuleOutline",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "lines" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},pointRadius:{defaultValue:null,description:"Sets the radius used to display Point and MultiPoint geometries to the specified number.",name:"pointRadius",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/projections/Mercator.tsx#Mercator"]={docgenInfo:A.__docgenInfo,name:"Mercator",path:"../visx-geo/src/projections/Mercator.tsx#Mercator"})}catch(H){}function _(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function C(e){return Object(r.jsx)(v,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?_(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):_(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({projection:"naturalEarth"},e))}try{C.displayName="NaturalEarth",C.__docgenInfo={description:'All props pass through to `<Projection projection="naturalEarth" {...props} />`',displayName:"NaturalEarth",props:{children:{defaultValue:null,description:"Override render function which is passed path data and a copy of the constructed projection.",name:"children",required:!1,type:{name:"((args: { path: GeoPath<unknown, GeoPermissibleObjects>; features: ParsedFeature<Datum>[]; projection: GeoProjection; }) => ReactNode) | undefined"}},className:{defaultValue:null,description:"className to apply to feature path elements.",name:"className",required:!1,type:{name:"string | undefined"}},scale:{defaultValue:null,description:"Sets the projection\u2019s scale factor to the specified value. The scale factor corresponds linearly\nto the distance between projected points; however, absolute scale factors are not equivalent\nacross projections.",name:"scale",required:!1,type:{name:"number | undefined"}},rotate:{defaultValue:null,description:"Sets the projection\u2019s three-axis spherical rotation to the specified angles [lambda, phi [, gamma]], corresponding to yaw, pitch, and roll.",name:"rotate",required:!1,type:{name:"[number, number] | [number, number, number] | undefined"}},data:{defaultValue:null,description:"Array of features to project.",name:"data",required:!0,type:{name:"Datum[]"}},translate:{defaultValue:null,description:"Sets the projection\u2019s translation offset, which determines the pixel coordinates of the\nprojection\u2019s center, to the specified two-element array [tx, ty].",name:"translate",required:!1,type:{name:"[number, number] | undefined"}},center:{defaultValue:null,description:"Sets the projection\u2019s center to the specified two-element array of longitude and latitude in degrees.",name:"center",required:!1,type:{name:"[number, number] | undefined"}},innerRef:{defaultValue:null,description:"Function invoked for each feature which returns a React.Ref to the projection path element for that feature.",name:"innerRef",required:!1,type:{name:"((feature: ParsedFeature<Datum>, index: number) => Ref<SVGPathElement>) | undefined"}},centroid:{defaultValue:null,description:"Hook to render anything at the centroid of a feature.",name:"centroid",required:!1,type:{name:"((centroid: [number, number], feature: ParsedFeature<Datum>) => ReactNode) | undefined"}},projectionFunc:{defaultValue:null,description:"Hook to render above features, passed the configured projectionFunc.",name:"projectionFunc",required:!1,type:{name:"((projection: GeoProjection) => ReactNode) | undefined"}},clipAngle:{defaultValue:null,description:"Sets the projection\u2019s clipping circle radius to the specified angle in degree.",name:"clipAngle",required:!1,type:{name:"number | undefined"}},clipExtent:{defaultValue:null,description:"Sets the projection\u2019s viewport clip extent to the specified bounds in pixels. extent bounds\nare specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left-side of the viewport,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"clipExtent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},precision:{defaultValue:null,description:"Sets the threshold for the projection\u2019s adaptive resampling to the specified value in pixels.",name:"precision",required:!1,type:{name:"number | undefined"}},fitExtent:{defaultValue:null,description:"Sets the projection\u2019s scale and translate to fit the specified GeoJSON object in the center of the given extent.\nThe extent is specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left side of the bounding box,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"fitExtent",required:!1,type:{name:"[[[number, number], [number, number]], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},fitSize:{defaultValue:null,description:"Convenience prop for props.fitExtent where the top-left corner of the extent is [0, 0].",name:"fitSize",required:!1,type:{name:"[[number, number], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},graticule:{defaultValue:null,description:"If specified, renders a Graticule with the specified props. Specify `graticule.foreground = true` to be rendered on top of features.",name:"graticule",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleLines:{defaultValue:null,description:"If specified, renders a Graticule lines with the specified props. Specify `graticuleLines.foreground = true` to be rendered on top of features.",name:"graticuleLines",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleOutline:{defaultValue:null,description:"If specified, renders a Graticule outline with the specified props. Specify `graticuleOutline.foreground = true` to be rendered on top of features.",name:"graticuleOutline",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "lines" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},pointRadius:{defaultValue:null,description:"Sets the radius used to display Point and MultiPoint geometries to the specified number.",name:"pointRadius",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/projections/NaturalEarth.tsx#NaturalEarth"]={docgenInfo:C.__docgenInfo,name:"NaturalEarth",path:"../visx-geo/src/projections/NaturalEarth.tsx#NaturalEarth"})}catch(H){}function F(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function L(e){return Object(r.jsx)(v,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?F(Object(n),!0).forEach((function(t){Object(i.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):F(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({projection:"orthographic"},e))}try{L.displayName="Orthographic",L.__docgenInfo={description:'All props pass through to `<Projection projection="orthographic" {...props} />`',displayName:"Orthographic",props:{children:{defaultValue:null,description:"Override render function which is passed path data and a copy of the constructed projection.",name:"children",required:!1,type:{name:"((args: { path: GeoPath<unknown, GeoPermissibleObjects>; features: ParsedFeature<Datum>[]; projection: GeoProjection; }) => ReactNode) | undefined"}},className:{defaultValue:null,description:"className to apply to feature path elements.",name:"className",required:!1,type:{name:"string | undefined"}},scale:{defaultValue:null,description:"Sets the projection\u2019s scale factor to the specified value. The scale factor corresponds linearly\nto the distance between projected points; however, absolute scale factors are not equivalent\nacross projections.",name:"scale",required:!1,type:{name:"number | undefined"}},rotate:{defaultValue:null,description:"Sets the projection\u2019s three-axis spherical rotation to the specified angles [lambda, phi [, gamma]], corresponding to yaw, pitch, and roll.",name:"rotate",required:!1,type:{name:"[number, number] | [number, number, number] | undefined"}},data:{defaultValue:null,description:"Array of features to project.",name:"data",required:!0,type:{name:"Datum[]"}},translate:{defaultValue:null,description:"Sets the projection\u2019s translation offset, which determines the pixel coordinates of the\nprojection\u2019s center, to the specified two-element array [tx, ty].",name:"translate",required:!1,type:{name:"[number, number] | undefined"}},center:{defaultValue:null,description:"Sets the projection\u2019s center to the specified two-element array of longitude and latitude in degrees.",name:"center",required:!1,type:{name:"[number, number] | undefined"}},innerRef:{defaultValue:null,description:"Function invoked for each feature which returns a React.Ref to the projection path element for that feature.",name:"innerRef",required:!1,type:{name:"((feature: ParsedFeature<Datum>, index: number) => Ref<SVGPathElement>) | undefined"}},centroid:{defaultValue:null,description:"Hook to render anything at the centroid of a feature.",name:"centroid",required:!1,type:{name:"((centroid: [number, number], feature: ParsedFeature<Datum>) => ReactNode) | undefined"}},projectionFunc:{defaultValue:null,description:"Hook to render above features, passed the configured projectionFunc.",name:"projectionFunc",required:!1,type:{name:"((projection: GeoProjection) => ReactNode) | undefined"}},clipAngle:{defaultValue:null,description:"Sets the projection\u2019s clipping circle radius to the specified angle in degree.",name:"clipAngle",required:!1,type:{name:"number | undefined"}},clipExtent:{defaultValue:null,description:"Sets the projection\u2019s viewport clip extent to the specified bounds in pixels. extent bounds\nare specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left-side of the viewport,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"clipExtent",required:!1,type:{name:"[[number, number], [number, number]] | undefined"}},precision:{defaultValue:null,description:"Sets the threshold for the projection\u2019s adaptive resampling to the specified value in pixels.",name:"precision",required:!1,type:{name:"number | undefined"}},fitExtent:{defaultValue:null,description:"Sets the projection\u2019s scale and translate to fit the specified GeoJSON object in the center of the given extent.\nThe extent is specified as an array [[x\u2080, y\u2080], [x\u2081, y\u2081]], where x\u2080 is the left side of the bounding box,\ny\u2080 is the top, x\u2081 is the right and y\u2081 is the bottom.",name:"fitExtent",required:!1,type:{name:"[[[number, number], [number, number]], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},fitSize:{defaultValue:null,description:"Convenience prop for props.fitExtent where the top-left corner of the extent is [0, 0].",name:"fitSize",required:!1,type:{name:"[[number, number], ExtendedFeature<Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon | GeometryCollection | GeoSphere | null, GeoJsonProperties>] | undefined"}},graticule:{defaultValue:null,description:"If specified, renders a Graticule with the specified props. Specify `graticule.foreground = true` to be rendered on top of features.",name:"graticule",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleLines:{defaultValue:null,description:"If specified, renders a Graticule lines with the specified props. Specify `graticuleLines.foreground = true` to be rendered on top of features.",name:"graticuleLines",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "outline" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},graticuleOutline:{defaultValue:null,description:"If specified, renders a Graticule outline with the specified props. Specify `graticuleOutline.foreground = true` to be rendered on top of features.",name:"graticuleOutline",required:!1,type:{name:'(Pick<GraticuleProps, "children" | "step" | "precision" | "graticule" | "lines" | "extent" | "extentMajor" | "extentMinor" | "stepMajor" | "stepMinor"> & { ...; }) | undefined'}},pointRadius:{defaultValue:null,description:"Sets the radius used to display Point and MultiPoint geometries to the specified number.",name:"pointRadius",required:!1,type:{name:"number | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-geo/src/projections/Orthographic.tsx#Orthographic"]={docgenInfo:L.__docgenInfo,name:"Orthographic",path:"../visx-geo/src/projections/Orthographic.tsx#Orthographic"})}catch(H){}var T=n("QnPE"),D=n("ncWJ"),I=n("nFtJ"),J=n("ZcUu"),z=[v,s,M,q,G,k,A,C,L],B=[D.default,I.default,J.default];t.default=function(){return Object(r.jsx)(T.a,{components:z,examples:B,readme:"# @visx/geo\n\n<a title=\"@visx/geo npm downloads\" href=\"https://www.npmjs.com/package/@visx/geo\">\n  <img src=\"https://img.shields.io/npm/dm/@visx/geo.svg?style=flat-square\" />\n</a>\n\nThe `@visx/geo` package provides `react` components for rendering common and custom geographic\nprojections. `<Projection />` can be used to render preset projections\n(`projection='orthographic' | 'albers' | 'albersUsa' | 'mercator' | 'naturalEarth' | 'equalEarth'`)\nalong with configurable `<Graticule />`s lines. Convenience projections such as `<Mercator />` are\nalso exported, along with `<CustomProjection />` and `<Graticule />` for full customization.\n\n## Installation\n\n```\nnpm install --save @visx/geo\n```\n",visxPackage:"geo"})}},"8+kr":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("5f3a"),i=n("uKU/"),o=n("W1cA");function a(){var e,t=0,n=1,u=1,c=[.5],l=[0,1];function s(t){return null!=t&&t<=t?l[Object(r.a)(c,t,0,u)]:e}function d(){var e=-1;for(c=new Array(u);++e<u;)c[e]=((e+1)*n-(e-u)*t)/(u+1);return s}return s.domain=function(e){return arguments.length?([t,n]=e,t=+t,n=+n,d()):[t,n]},s.range=function(e){return arguments.length?(u=(l=Array.from(e)).length-1,d()):l.slice()},s.invertExtent=function(e){var r=l.indexOf(e);return r<0?[NaN,NaN]:r<1?[t,c[0]]:r>=u?[c[u-1],n]:[c[r-1],c[r]]},s.unknown=function(t){return arguments.length?(e=t,s):s},s.thresholds=function(){return c.slice()},s.copy=function(){return a().domain([t,n]).range(l).unknown(e)},o.b.apply(Object(i.b)(s),arguments)}},Ffzq:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/geo",function(){return n("12iu")}])},HbGN:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}n.d(t,"a",(function(){return r}))},JmwF:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n("aWzz"),i=n.n(r),o=n("ERkP"),a=n.n(o),u=n("O94r"),c=n.n(u),l=["top","left","transform","className","children","innerRef"];function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function d(e){var t=e.top,n=void 0===t?0:t,r=e.left,i=void 0===r?0:r,o=e.transform,u=e.className,d=e.children,p=e.innerRef,f=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,l);return a.a.createElement("g",s({ref:p,className:c()("visx-group",u),transform:o||"translate("+i+", "+n+")"},f),d)}d.propTypes={top:i.a.number,left:i.a.number,transform:i.a.string,className:i.a.string,children:i.a.node,innerRef:i.a.oneOfType([i.a.string,i.a.func,i.a.object])}},Q6s3:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("8+kr"),i=n("xx0A"),o=Object(i.b)("domain","range","reverse","nice","zero");function a(e){return o(Object(r.a)(),e)}},"VB+g":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("rkTo"),i=n("ZQHj");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var a={x:0,y:0};function u(e,t){if(!e||!t)return null;var n=function(e){if(!e)return o({},a);if(Object(i.g)(e))return e.changedTouches.length>0?{x:e.changedTouches[0].clientX,y:e.changedTouches[0].clientY}:o({},a);if(Object(i.c)(e))return{x:e.clientX,y:e.clientY};var t=null==e?void 0:e.target,n=t&&"getBoundingClientRect"in t?t.getBoundingClientRect():null;return n?{x:n.x+n.width/2,y:n.y+n.height/2}:o({},a)}(t),u=Object(i.d)(e)?e.ownerSVGElement:e,c=Object(i.e)(u)?u.getScreenCTM():null;if(Object(i.f)(u)&&c){var l=u.createSVGPoint();return l.x=n.x,l.y=n.y,l=l.matrixTransform(c.inverse()),new r.a({x:l.x,y:l.y})}var s=e.getBoundingClientRect();return new r.a({x:n.x-s.left-e.clientLeft,y:n.y-s.top-e.clientTop})}},ZQHj:function(e,t,n){"use strict";function r(e){return!!e&&e instanceof Element}function i(e){return!!e&&(e instanceof SVGElement||"ownerSVGElement"in e)}function o(e){return!!e&&"createSVGPoint"in e}function a(e){return!!e&&"getScreenCTM"in e}function u(e){return!!e&&"changedTouches"in e}function c(e){return!!e&&"clientX"in e}function l(e){return!!e&&(e instanceof Event||"nativeEvent"in e&&e.nativeEvent instanceof Event)}n.d(t,"a",(function(){return r})),n.d(t,"d",(function(){return i})),n.d(t,"f",(function(){return o})),n.d(t,"e",(function(){return a})),n.d(t,"g",(function(){return u})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l}))},Zbhd:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("PB0s"),i=n("XAd9"),o=n("Cyas"),a=n("VBI3");function u(e,t,n,u){var c,l=Object(r.c)(e,t,n);switch((u=Object(i.a)(null==u?",f":u)).type){case"s":var s=Math.max(Math.abs(e),Math.abs(t));return null!=u.precision||isNaN(c=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Object(o.a)(t)/3)))-Object(o.a)(Math.abs(e)))}(l,s))||(u.precision=c),Object(a.b)(u,s);case"":case"e":case"g":case"p":case"r":null!=u.precision||isNaN(c=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,Object(o.a)(t)-Object(o.a)(e))+1}(l,Math.max(Math.abs(e),Math.abs(t))))||(u.precision=c-("e"===u.type));break;case"f":case"%":null!=u.precision||isNaN(c=function(e){return Math.max(0,-Object(o.a)(Math.abs(e)))}(l))||(u.precision=c-2*("%"===u.type))}return Object(a.a)(u)}},ZcUu:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r=n("jg1C"),i=(n("ERkP"),n("LhuO")),o=n("i9k6"),a=n("5a0K");n.d(t,"packageJson",(function(){return a}));var u={background:i.a},c={color:i.b[1]};function l(){return Object(r.jsx)(o.a,{title:"AlbersUsa",description:"<Geo.AlbersUsa />",exampleProps:{fullSize:!1},exampleRenderer:i.c,exampleUrl:"/geo-albers-usa",tileStyles:u,detailsStyles:c})}},i6Tx:function(e,t,n){"use strict";t.__esModule=!0,t.default=d;var r=l(n("aWzz")),i=l(n("FGHv")),o=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var n=c(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}r.default=e,n&&n.set(e,r);return r}(n("ERkP")),a=l(n("LaGA")),u=["className","children","debounceTime","ignoreDimensions","parentSizeStyles","enableDebounceLeadingCall"];function c(e){if("function"!==typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(c=function(e){return e?n:t})(e)}function l(e){return e&&e.__esModule?e:{default:e}}function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function d(e){var t=e.className,n=e.children,r=e.debounceTime,c=void 0===r?300:r,l=e.ignoreDimensions,d=void 0===l?[]:l,p=e.parentSizeStyles,f=void 0===p?{width:"100%",height:"100%"}:p,m=e.enableDebounceLeadingCall,h=void 0===m||m,b=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,u),g=(0,o.useRef)(null),y=(0,o.useRef)(0),j=(0,o.useState)({width:0,height:0,top:0,left:0}),x=j[0],O=j[1],P=(0,o.useMemo)((function(){var e=Array.isArray(d)?d:[d];return(0,i.default)((function(t){O((function(n){return Object.keys(n).filter((function(e){return n[e]!==t[e]})).every((function(t){return e.includes(t)}))?n:t}))}),c,{leading:h})}),[c,h,d]);return(0,o.useEffect)((function(){var e=new a.default((function(e){void 0===e&&(e=[]),e.forEach((function(e){var t=e.contentRect,n=t.left,r=t.top,i=t.width,o=t.height;y.current=window.requestAnimationFrame((function(){P({width:i,height:o,top:r,left:n})}))}))}));return g.current&&e.observe(g.current),function(){window.cancelAnimationFrame(y.current),e.disconnect(),null!=P&&P.cancel&&P.cancel()}}),[P]),o.default.createElement("div",s({style:f,ref:g,className:t},b),n(s({},x,{ref:g.current,resize:P})))}d.propTypes={className:r.default.string,debounceTime:r.default.number,enableDebounceLeadingCall:r.default.bool,ignoreDimensions:r.default.oneOfType([r.default.any,r.default.arrayOf(r.default.any)]),children:r.default.func.isRequired}},i9k6:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n("zjfJ"),i=n("jg1C"),o=n("yFcC"),a=n.n(o),u=n("ERkP"),c=n.n(u),l=n("jvFD"),s=n.n(l),d=n("i6Tx"),p=n.n(d);function f(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function m(e){var t,n,o=e.description,u=e.detailsHeight,l=void 0===u?76:u,d=e.detailsStyles,m=e.exampleProps,h=e.exampleRenderer,b=e.exampleUrl,g=e.tileStyles,y=e.title;return Object(i.jsxs)(i.Fragment,{children:[(t=b,n=Object(i.jsxs)("div",{style:g,className:"jsx-713312509 gallery-tile",children:[Object(i.jsx)("div",{className:"jsx-713312509 image",children:Object(i.jsx)(p.a,{children:function(e){var t=e.width,n=e.height;return c.a.createElement(h,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?f(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({width:t,height:n+(y||o?l:0)},m))}})}),(y||o)&&Object(i.jsxs)("div",{style:d,className:"jsx-713312509 details",children:[y&&Object(i.jsx)("div",{className:"jsx-713312509 title",children:y}),o&&Object(i.jsx)("div",{className:"jsx-713312509 description",children:Object(i.jsx)("pre",{className:"jsx-713312509",children:o})})]})]}),t?Object(i.jsx)(s.a,{href:t,children:n}):n),Object(i.jsx)(a.a,{id:"713312509",children:["h3.jsx-713312509{margin-top:0;margin-left:40px;margin-bottom:0;}",".gallery-tile.jsx-713312509{background-color:white;margin:5px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:390px;-webkit-flex:1;-ms-flex:1;flex:1;min-width:300px;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;border-radius:14px;cursor:pointer;}",".image.jsx-713312509{-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;overflow:hidden;}",".details.jsx-713312509{text-align:center;padding:15px 20px;color:#ffffff;}",".title.jsx-713312509{font-weight:900;line-height:0.9rem;}",".description.jsx-713312509{font-weight:300;font-size:14px;}","pre.jsx-713312509{margin:0;background-color:transparent;min-width:unset;}","@media (max-width:960px){.gallery-tile.jsx-713312509{min-width:45%;}}","@media (max-width:600px){.gallery-tile.jsx-713312509{min-width:100%;}}"]})]})}try{m.displayName="GalleryTile",m.__docgenInfo={description:"",displayName:"GalleryTile",props:{description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string | undefined"}},detailsHeight:{defaultValue:{value:76},description:"",name:"detailsHeight",required:!1,type:{name:"number | undefined"}},detailsStyles:{defaultValue:null,description:"",name:"detailsStyles",required:!1,type:{name:"CSSProperties | undefined"}},exampleRenderer:{defaultValue:null,description:"",name:"exampleRenderer",required:!0,type:{name:"ComponentClass<ExampleProps, any> | FunctionComponent<ExampleProps>"}},exampleProps:{defaultValue:null,description:"",name:"exampleProps",required:!1,type:{name:'(Pick<ExampleProps, Exclude<keyof ExampleProps, "width" | "height">> & Partial<Pick<ExampleProps, "width" | "height">>) | undefined'}},exampleUrl:{defaultValue:null,description:"",name:"exampleUrl",required:!1,type:{name:"string | undefined"}},tileStyles:{defaultValue:null,description:"",name:"tileStyles",required:!1,type:{name:"CSSProperties | undefined"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GalleryTile.tsx#GalleryTile"]={docgenInfo:m.__docgenInfo,name:"GalleryTile",path:"src/components/GalleryTile.tsx#GalleryTile"})}catch(h){}},jpI8:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("VB+g"),i=n("ZQHj");function o(e,t){if(Object(i.a)(e)&&t)return Object(r.a)(e,t);if(Object(i.b)(e)){var n=e,o=n.target;if(o)return Object(r.a)(o,n)}return null}},nFtJ:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var r=n("jg1C"),i=(n("ERkP"),n("yZzs")),o=n("i9k6"),a=n("FOG4");n.d(t,"packageJson",(function(){return a}));var u={background:i.a},c={color:"#019ece"},l={events:!1};function s(){return Object(r.jsx)(o.a,{title:"Custom Projection",description:"<Geo.CustomProjection />",exampleProps:l,exampleRenderer:i.b,exampleUrl:"/geo-custom",tileStyles:u,detailsStyles:c})}},ncWJ:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r=n("jg1C"),i=(n("ERkP"),n("O2oz")),o=n("i9k6"),a=n("d2Lb");n.d(t,"packageJson",(function(){return a}));var u={background:i.a},c={color:"#f63a48"};function l(){return Object(r.jsx)(o.a,{title:"Mercator",description:"<Geo.Mercator />",exampleRenderer:i.b,exampleUrl:"/geo-mercator",tileStyles:u,detailsStyles:c})}},rkTo:function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",(function(){return i}));var i=function(){function e(e){var t=e.x,n=void 0===t?0:t,i=e.y,o=void 0===i?0:i;r(this,"x",0),r(this,"y",0),this.x=n,this.y=o}var t=e.prototype;return t.value=function(){return{x:this.x,y:this.y}},t.toArray=function(){return[this.x,this.y]},e}()},"uKU/":function(e,t,n){"use strict";n.d(t,"b",(function(){return u})),n.d(t,"a",(function(){return c}));var r=n("PB0s"),i=n("2+fR"),o=n("W1cA"),a=n("Zbhd");function u(e){var t=e.domain;return e.ticks=function(e){var n=t();return Object(r.a)(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){var r=t();return Object(a.a)(r[0],r[r.length-1],null==e?10:e,n)},e.nice=function(n){null==n&&(n=10);var i,o,a=t(),u=0,c=a.length-1,l=a[u],s=a[c],d=10;for(s<l&&(o=l,l=s,s=o,o=u,u=c,c=o);d-- >0;){if((o=Object(r.b)(l,s,n))===i)return a[u]=l,a[c]=s,t(a);if(o>0)l=Math.floor(l/o)*o,s=Math.ceil(s/o)*o;else{if(!(o<0))break;l=Math.ceil(l*o)/o,s=Math.floor(s*o)/o}i=o}return e},e}function c(){var e=Object(i.b)();return e.copy=function(){return Object(i.a)(e,c())},o.b.apply(e,arguments),u(e)}},zjfJ:function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",(function(){return r}))}},[["Ffzq",0,2,1,3,4,5,8,9,10,23,26,37,49,43]]]);